{"version":3,"sources":["assests/img/lottery.jpg","components/Header.js","components/Number.js","components/NumberSection.js","components/MoneyInput.js","components/Output.js","App.js","index.js"],"names":["Header","className","Number","token","onTokenSelected","value","selected","id","onClick","NumberSection","numbers","NumSelect","ClearClick","OnCashOutputButtonClicked","CashButtonEnabled","RandomClick","map","t","i","disabled","moneyOptions","MoneyInput","OnCashButtonPressed","c","Output","tokens","Amount","selectedNums","length","defaultNumbers","Array","keys","v","App","useState","setCash","setnumbers","setCashEnabled","randomNumbers","allTokens","r","Math","floor","random","indexOf","push","includes","toggleSelection","updatedTokens","Num","find","canSelectTokens","filter","ResetMoney","enableCash","src","lottery","alt","alert","defaults","selectedNumbers","join","UpdateMoney","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8767bf7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lottery.9f14964b.jpg\";","//import '../styles/Header.css'\r\nimport \"../assests/css/App.css\";\r\nconst Header=()=> {\r\n    return (\r\n      <div className=\"Header\">\r\n        <h1>WHE WHE on D' Avenue Lottery System</h1>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Header;","import React from 'react';\r\nimport \"../assests/css/App.css\";\r\n\r\nconst Number = ({ token, onTokenSelected }) => {\r\n    const { value, selected } = token;\r\n    return (\r\n        <button\r\n            id={value} className={selected ? 'button:active' : 'button'} onClick={() => onTokenSelected(token)}> {value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Number;","import React from 'react';\r\nimport \"../assests/css/App.css\";\r\nimport Number from './Number';\r\n\r\nconst NumberSection = ({ numbers,  NumSelect, ClearClick, OnCashOutputButtonClicked, CashButtonEnabled, RandomClick }) => {\r\n\r\n    return (\r\n        <div className=\"NumberSection\">\r\n            <p>** Select 5 Numbers to play **</p>\r\n            <div>\r\n                {\r\n                    numbers.map((t, i) => <Number key={i} token={t} onTokenSelected={NumSelect} />)\r\n                }\r\n                <div className=\"mt-3\">\r\n                    <button disabled={!CashButtonEnabled} onClick={OnCashOutputButtonClicked} >Cash Out</button>\r\n                    <button  onClick={RandomClick}>Random Selection</button>\r\n                    <button  onClick={ClearClick}>Reset </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NumberSection;","import React from 'react'\r\nimport \"../assests/css/App.css\";\r\n\r\nconst MoneyInput = ({OnCashButtonPressed, CashButtonEnabled }) => {\r\n    return (\r\n        <div className=\"MoneyInput\">\r\n            <p>** Press Amount To Cash Out **</p>\r\n             {moneyOptions.map(c => <button disabled={!CashButtonEnabled} onClick={() => OnCashButtonPressed(c)} key={c}>${c}</button>)}\r\n        </div>\r\n    )\r\n}\r\nconst moneyOptions=[1,5,10,20];\r\nexport default MoneyInput\r\n\r\n","import React from 'react';\r\nimport \"../assests/css/App.css\";\r\n\r\nconst Output = ({ tokens = [], Amount = 0 }) => {\r\n    const selectedNums = tokens.length > 0 ? <p> {tokens.map(t => <li key={t.value}>{t.value}</li>)}</p> : <p> </p>\r\n    return (\r\n        <div className=\"Output\">\r\n            <p>** U Selected **</p>\r\n            {selectedNums}\r\n            <p>** Total Amount: ${Amount} **</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Output;","import React, { useState } from 'react';\nimport \"./assests/css/App.css\";\nimport lottery from \"./assests/img/lottery.jpg\"\nimport Header from './components/Header';\nimport NumberSection from './components/NumberSection';\nimport MoneyInput from './components/MoneyInput';\nimport Output from './components/Output';\n\nconst SELECTION_COUNT_ALLOWED = 5;\nconst NUMBERS_ALLOWED = 20;\n\nfunction App() {\n  const [Amount, setCash] = useState(0);\n  const [numbers, setnumbers] = useState([...defaultNumbers]);\n  const [CashButtonEnabled, setCashEnabled] = useState(false);\n\n  //Random button\n  const RandomClick = () => {\n    setnumbers(randomNumbers(numbers));\n    ResetMoney(true);\n  }\n  //random only 5 display\n  const randomNumbers = (allTokens) => {\n    const RANDOM_NUMBER_COUNT = 5;\n    const randomNumbers = [];\n    while (randomNumbers.length < RANDOM_NUMBER_COUNT) {\n      let r = Math.floor(Math.random() * NUMBERS_ALLOWED) + 1;\n      if (randomNumbers.indexOf(r) === -1) randomNumbers.push(r);\n    }\n    return allTokens.map(({ value }) => ({\n      value,\n      selected: randomNumbers.includes(value)\n    }));\n  }\n  //Number Select unselect \n  const NumSelect = (token) => {\n    if (!token.selected) {\n      if (canSelectTokens(numbers)) {\n        const updatedTokens = toggleSelection(token, numbers);\n        setnumbers(updatedTokens);\n        if (!canSelectTokens(numbers)) {\n          setCashEnabled(true);\n        }\n      } else {\n        alert('Maximun 5 number can be selected ! U Exceed the count Sry!!');\n      }\n    } else {\n      const updatedTokens = toggleSelection(token, numbers);\n      setnumbers(updatedTokens);\n      ResetMoney();\n    }\n  }\n  const toggleSelection = (token, tokens = []) => {\n    const { value, selected } = token;\n    const updatedTokens = [...tokens];\n    const Num = updatedTokens.find(t => t.value === value);\n    Num.selected = !selected;\n    return updatedTokens;\n  }\n  //validation on selection max5\n  const canSelectTokens = (tokens = []) => {\n    return tokens.filter(t => t.selected).length < SELECTION_COUNT_ALLOWED;\n  }\n\n  //RESET SCREEN\n  const ResetClick = () => {\n    const defaults = numbers.map(t => ({\n      ...t,\n      selected: false\n    }))\n    setnumbers(defaults);\n    ResetMoney();\n  }\n  //Clear money\n  const ResetMoney = (enableCash = false) => {\n    setCash(0);\n    setCashEnabled(enableCash);\n  }\n  //cashout\n  const OnCashButtonPressed = (value = 0) => {\n    if (CashButtonEnabled) {\n      const UpdateMoney = Amount + value;\n      setCash(UpdateMoney);\n    } else {\n      alert('Please select 5 buttons before cashing out!.');\n    }\n  }\n  //alert with cashout click..\n  const OnCashOutputButtonClicked = () => {\n    const selectedNumbers = numbers.filter(t => t.selected).map(t => t.value).join('/ ');\n    alert(`BEST OF LUCK Ur Numbers are : ${selectedNumbers}  ,U Cashed Out at $${Amount} And Results will be declared this Tuesday !!!`);\n  }\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"row\">\n        <img className=\"lottery\" src={lottery} alt=\"lotteryImg\" />\n        <NumberSection numbers={numbers} NumSelect={NumSelect} ClearClick={ResetClick} CashButtonEnabled={CashButtonEnabled} OnCashOutputButtonClicked={OnCashOutputButtonClicked}  RandomClick={RandomClick} />\n        <MoneyInput CashButtonEnabled={CashButtonEnabled} OnCashButtonPressed={OnCashButtonPressed} />\n        <Output tokens={numbers.filter(t => t.selected)} Amount={Amount} />\n      </div>\n    </div>\n  );  \n}\n//Numbers display\nconst defaultNumbers = [...Array(NUMBERS_ALLOWED).keys()].map(v => ({\n  value: v + 1,\n  selected: false\n}));\nexport default App;","\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}